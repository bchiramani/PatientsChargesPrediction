2023-06-16 13:05:58,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:05:58,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:05:58,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:05:58,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:06:00,742:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:06:01,296:INFO:Initializing load_model()
2023-06-16 13:06:01,296:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:06:01,331:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-06-16 13:06:25,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:06:25,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:06:25,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:06:25,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:06:26,707:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:06:27,119:INFO:Initializing load_model()
2023-06-16 13:06:27,119:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:06:27,121:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-06-16 13:07:26,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:07:26,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:07:26,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:07:26,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:07:27,598:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:07:27,984:INFO:Initializing load_model()
2023-06-16 13:07:27,984:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:07:27,986:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-06-16 13:10:22,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:10:22,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:10:22,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:10:22,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:10:23,168:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:10:23,562:INFO:Initializing load_model()
2023-06-16 13:10:23,562:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:10:23,564:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-06-16 13:12:15,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:12:15,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:12:15,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:12:15,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:12:16,359:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:12:19,769:INFO:PyCaret RegressionExperiment
2023-06-16 13:12:19,769:INFO:Logging name: reg-default-name
2023-06-16 13:12:19,769:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-16 13:12:19,769:INFO:version 3.0.2
2023-06-16 13:12:19,769:INFO:Initializing setup()
2023-06-16 13:12:19,769:INFO:self.USI: 8f3e
2023-06-16 13:12:19,769:INFO:self._variable_keys: {'logging_param', 'data', 'X', 'target_param', 'pipeline', 'X_train', 'exp_name_log', 'y_train', 'fold_groups_param', '_available_plots', 'memory', 'transform_target_param', 'X_test', '_ml_usecase', 'n_jobs_param', 'fold_shuffle_param', 'idx', 'USI', 'gpu_param', 'html_param', 'gpu_n_jobs_param', 'fold_generator', 'y', 'exp_id', 'log_plots_param', 'seed', 'y_test'}
2023-06-16 13:12:19,769:INFO:Checking environment
2023-06-16 13:12:19,769:INFO:python_version: 3.7.6
2023-06-16 13:12:19,770:INFO:python_build: ('tags/v3.7.6:43364a7ae0', 'Dec 19 2019 00:42:30')
2023-06-16 13:12:19,770:INFO:machine: AMD64
2023-06-16 13:12:19,770:INFO:platform: Windows-10-10.0.22621-SP0
2023-06-16 13:12:19,779:INFO:Memory: svmem(total=7958728704, available=1083408384, percent=86.4, used=6875320320, free=1083408384)
2023-06-16 13:12:19,779:INFO:Physical Core: 6
2023-06-16 13:12:19,779:INFO:Logical Core: 6
2023-06-16 13:12:19,779:INFO:Checking libraries
2023-06-16 13:12:19,779:INFO:System:
2023-06-16 13:12:19,779:INFO:    python: 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit (AMD64)]
2023-06-16 13:12:19,780:INFO:executable: C:\Users\Amani\AppData\Local\Programs\Python\Python37\python.exe
2023-06-16 13:12:19,780:INFO:   machine: Windows-10-10.0.22621-SP0
2023-06-16 13:12:19,780:INFO:PyCaret required dependencies:
2023-06-16 13:12:19,780:INFO:                 pip: 23.1.2
2023-06-16 13:12:19,780:INFO:          setuptools: 41.2.0
2023-06-16 13:12:19,780:INFO:             pycaret: 3.0.2
2023-06-16 13:12:19,780:INFO:             IPython: 7.34.0
2023-06-16 13:12:19,780:INFO:          ipywidgets: 8.0.6
2023-06-16 13:12:19,780:INFO:                tqdm: 4.65.0
2023-06-16 13:12:19,780:INFO:               numpy: 1.21.6
2023-06-16 13:12:19,780:INFO:              pandas: 1.3.5
2023-06-16 13:12:19,780:INFO:              jinja2: 3.1.2
2023-06-16 13:12:19,780:INFO:               scipy: 1.7.3
2023-06-16 13:12:19,780:INFO:              joblib: 1.2.0
2023-06-16 13:12:19,781:INFO:             sklearn: 1.0.2
2023-06-16 13:12:19,781:INFO:                pyod: 1.0.9
2023-06-16 13:12:19,781:INFO:            imblearn: 0.10.1
2023-06-16 13:12:19,781:INFO:   category_encoders: 2.6.1
2023-06-16 13:12:19,781:INFO:            lightgbm: 3.3.5
2023-06-16 13:12:19,781:INFO:               numba: 0.56.4
2023-06-16 13:12:19,781:INFO:            requests: 2.28.2
2023-06-16 13:12:19,781:INFO:          matplotlib: 3.5.3
2023-06-16 13:12:19,781:INFO:          scikitplot: 0.3.7
2023-06-16 13:12:19,781:INFO:         yellowbrick: 1.5
2023-06-16 13:12:19,781:INFO:              plotly: 5.15.0
2023-06-16 13:12:19,781:INFO:             kaleido: 0.2.1
2023-06-16 13:12:19,781:INFO:         statsmodels: 0.13.5
2023-06-16 13:12:19,781:INFO:              sktime: 0.17.0
2023-06-16 13:12:19,781:INFO:               tbats: 1.1.3
2023-06-16 13:12:19,781:INFO:            pmdarima: 2.0.3
2023-06-16 13:12:19,781:INFO:              psutil: 5.9.5
2023-06-16 13:12:19,781:INFO:PyCaret optional dependencies:
2023-06-16 13:12:19,793:INFO:                shap: Not installed
2023-06-16 13:12:19,793:INFO:           interpret: Not installed
2023-06-16 13:12:19,793:INFO:                umap: Not installed
2023-06-16 13:12:19,793:INFO:    pandas_profiling: Not installed
2023-06-16 13:12:19,793:INFO:  explainerdashboard: Not installed
2023-06-16 13:12:19,793:INFO:             autoviz: Not installed
2023-06-16 13:12:19,793:INFO:           fairlearn: Not installed
2023-06-16 13:12:19,793:INFO:             xgboost: Not installed
2023-06-16 13:12:19,795:INFO:            catboost: Not installed
2023-06-16 13:12:19,795:INFO:              kmodes: Not installed
2023-06-16 13:12:19,795:INFO:             mlxtend: Not installed
2023-06-16 13:12:19,795:INFO:       statsforecast: Not installed
2023-06-16 13:12:19,795:INFO:        tune_sklearn: Not installed
2023-06-16 13:12:19,795:INFO:                 ray: Not installed
2023-06-16 13:12:19,795:INFO:            hyperopt: Not installed
2023-06-16 13:12:19,795:INFO:              optuna: Not installed
2023-06-16 13:12:19,795:INFO:               skopt: Not installed
2023-06-16 13:12:19,795:INFO:              mlflow: 1.30.1
2023-06-16 13:12:19,795:INFO:              gradio: Not installed
2023-06-16 13:12:19,795:INFO:             fastapi: Not installed
2023-06-16 13:12:19,795:INFO:             uvicorn: Not installed
2023-06-16 13:12:19,795:INFO:              m2cgen: Not installed
2023-06-16 13:12:19,795:INFO:           evidently: Not installed
2023-06-16 13:12:19,795:INFO:               fugue: Not installed
2023-06-16 13:12:19,795:INFO:           streamlit: Not installed
2023-06-16 13:12:19,795:INFO:             prophet: Not installed
2023-06-16 13:12:19,796:INFO:None
2023-06-16 13:12:19,796:INFO:Set up data.
2023-06-16 13:12:19,812:INFO:Set up train/test split.
2023-06-16 13:12:19,827:INFO:Set up index.
2023-06-16 13:12:19,828:INFO:Set up folding strategy.
2023-06-16 13:12:19,828:INFO:Assigning column types.
2023-06-16 13:12:19,844:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 13:12:19,845:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 13:12:19,853:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:12:19,862:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:19,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,152:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,159:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,170:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,271:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,359:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-16 13:12:20,368:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,376:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,572:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,579:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,685:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,768:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-16 13:12:20,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:20,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:20,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,094:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,182:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-16 13:12:21,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,498:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 13:12:21,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:12:21,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:21,991:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-16 13:12:22,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:22,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:22,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:22,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:22,389:INFO:Preparing preprocessing pipeline...
2023-06-16 13:12:22,389:INFO:Set up simple imputation.
2023-06-16 13:12:22,436:INFO:Set up encoding of ordinal features.
2023-06-16 13:12:22,440:INFO:Set up encoding of categorical features.
2023-06-16 13:12:22,593:INFO:Finished creating preprocessing pipeline.
2023-06-16 13:12:22,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-06-16 13:12:22,645:INFO:Creating final display dataframe.
2023-06-16 13:12:22,975:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              8f3e
2023-06-16 13:12:23,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:23,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:23,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:23,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:12:23,384:INFO:setup() successfully completed in 3.62s...............
2023-06-16 13:12:23,384:INFO:Initializing compare_models()
2023-06-16 13:12:23,384:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-16 13:12:23,384:INFO:Checking exceptions
2023-06-16 13:12:23,385:INFO:Preparing display monitor
2023-06-16 13:12:23,391:INFO:Initializing Linear Regression
2023-06-16 13:12:23,391:INFO:Total runtime is 0.0 minutes
2023-06-16 13:12:23,393:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:23,393:INFO:Initializing create_model()
2023-06-16 13:12:23,393:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:23,393:INFO:Checking exceptions
2023-06-16 13:12:23,393:INFO:Importing libraries
2023-06-16 13:12:23,393:INFO:Copying training dataset
2023-06-16 13:12:23,398:INFO:Defining folds
2023-06-16 13:12:23,399:INFO:Declaring metric variables
2023-06-16 13:12:23,399:INFO:Importing untrained model
2023-06-16 13:12:23,400:INFO:Linear Regression Imported successfully
2023-06-16 13:12:23,400:INFO:Starting cross validation
2023-06-16 13:12:23,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:28,431:INFO:Calculating mean and std
2023-06-16 13:12:28,432:INFO:Creating metrics dataframe
2023-06-16 13:12:28,440:INFO:Uploading results into container
2023-06-16 13:12:28,440:INFO:Uploading model into container now
2023-06-16 13:12:28,441:INFO:_master_model_container: 1
2023-06-16 13:12:28,441:INFO:_display_container: 2
2023-06-16 13:12:28,441:INFO:LinearRegression(n_jobs=-1)
2023-06-16 13:12:28,441:INFO:create_model() successfully completed......................................
2023-06-16 13:12:28,508:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:28,509:INFO:Creating metrics dataframe
2023-06-16 13:12:28,513:INFO:Initializing Lasso Regression
2023-06-16 13:12:28,513:INFO:Total runtime is 0.08535803953806559 minutes
2023-06-16 13:12:28,513:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:28,513:INFO:Initializing create_model()
2023-06-16 13:12:28,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:28,513:INFO:Checking exceptions
2023-06-16 13:12:28,513:INFO:Importing libraries
2023-06-16 13:12:28,513:INFO:Copying training dataset
2023-06-16 13:12:28,517:INFO:Defining folds
2023-06-16 13:12:28,517:INFO:Declaring metric variables
2023-06-16 13:12:28,517:INFO:Importing untrained model
2023-06-16 13:12:28,517:INFO:Lasso Regression Imported successfully
2023-06-16 13:12:28,517:INFO:Starting cross validation
2023-06-16 13:12:28,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:28,960:INFO:Calculating mean and std
2023-06-16 13:12:28,961:INFO:Creating metrics dataframe
2023-06-16 13:12:28,969:INFO:Uploading results into container
2023-06-16 13:12:28,970:INFO:Uploading model into container now
2023-06-16 13:12:28,970:INFO:_master_model_container: 2
2023-06-16 13:12:28,970:INFO:_display_container: 2
2023-06-16 13:12:28,970:INFO:Lasso(random_state=123)
2023-06-16 13:12:28,971:INFO:create_model() successfully completed......................................
2023-06-16 13:12:29,037:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:29,037:INFO:Creating metrics dataframe
2023-06-16 13:12:29,041:INFO:Initializing Ridge Regression
2023-06-16 13:12:29,041:INFO:Total runtime is 0.09415172338485717 minutes
2023-06-16 13:12:29,042:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:29,042:INFO:Initializing create_model()
2023-06-16 13:12:29,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:29,042:INFO:Checking exceptions
2023-06-16 13:12:29,042:INFO:Importing libraries
2023-06-16 13:12:29,042:INFO:Copying training dataset
2023-06-16 13:12:29,045:INFO:Defining folds
2023-06-16 13:12:29,045:INFO:Declaring metric variables
2023-06-16 13:12:29,046:INFO:Importing untrained model
2023-06-16 13:12:29,046:INFO:Ridge Regression Imported successfully
2023-06-16 13:12:29,046:INFO:Starting cross validation
2023-06-16 13:12:29,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:29,577:INFO:Calculating mean and std
2023-06-16 13:12:29,577:INFO:Creating metrics dataframe
2023-06-16 13:12:29,586:INFO:Uploading results into container
2023-06-16 13:12:29,587:INFO:Uploading model into container now
2023-06-16 13:12:29,587:INFO:_master_model_container: 3
2023-06-16 13:12:29,587:INFO:_display_container: 2
2023-06-16 13:12:29,587:INFO:Ridge(random_state=123)
2023-06-16 13:12:29,587:INFO:create_model() successfully completed......................................
2023-06-16 13:12:29,649:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:29,649:INFO:Creating metrics dataframe
2023-06-16 13:12:29,653:INFO:Initializing Elastic Net
2023-06-16 13:12:29,653:INFO:Total runtime is 0.10435932874679564 minutes
2023-06-16 13:12:29,653:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:29,653:INFO:Initializing create_model()
2023-06-16 13:12:29,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:29,655:INFO:Checking exceptions
2023-06-16 13:12:29,655:INFO:Importing libraries
2023-06-16 13:12:29,655:INFO:Copying training dataset
2023-06-16 13:12:29,657:INFO:Defining folds
2023-06-16 13:12:29,658:INFO:Declaring metric variables
2023-06-16 13:12:29,658:INFO:Importing untrained model
2023-06-16 13:12:29,658:INFO:Elastic Net Imported successfully
2023-06-16 13:12:29,659:INFO:Starting cross validation
2023-06-16 13:12:29,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:30,038:INFO:Calculating mean and std
2023-06-16 13:12:30,039:INFO:Creating metrics dataframe
2023-06-16 13:12:30,048:INFO:Uploading results into container
2023-06-16 13:12:30,049:INFO:Uploading model into container now
2023-06-16 13:12:30,049:INFO:_master_model_container: 4
2023-06-16 13:12:30,049:INFO:_display_container: 2
2023-06-16 13:12:30,049:INFO:ElasticNet(random_state=123)
2023-06-16 13:12:30,050:INFO:create_model() successfully completed......................................
2023-06-16 13:12:30,115:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:30,116:INFO:Creating metrics dataframe
2023-06-16 13:12:30,120:INFO:Initializing Least Angle Regression
2023-06-16 13:12:30,120:INFO:Total runtime is 0.11214826504389444 minutes
2023-06-16 13:12:30,121:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:30,121:INFO:Initializing create_model()
2023-06-16 13:12:30,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:30,121:INFO:Checking exceptions
2023-06-16 13:12:30,121:INFO:Importing libraries
2023-06-16 13:12:30,121:INFO:Copying training dataset
2023-06-16 13:12:30,124:INFO:Defining folds
2023-06-16 13:12:30,124:INFO:Declaring metric variables
2023-06-16 13:12:30,124:INFO:Importing untrained model
2023-06-16 13:12:30,126:INFO:Least Angle Regression Imported successfully
2023-06-16 13:12:30,126:INFO:Starting cross validation
2023-06-16 13:12:30,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:30,287:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,287:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,298:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,300:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,593:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,601:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,605:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,637:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:30,691:INFO:Calculating mean and std
2023-06-16 13:12:30,692:INFO:Creating metrics dataframe
2023-06-16 13:12:30,706:INFO:Uploading results into container
2023-06-16 13:12:30,706:INFO:Uploading model into container now
2023-06-16 13:12:30,706:INFO:_master_model_container: 5
2023-06-16 13:12:30,706:INFO:_display_container: 2
2023-06-16 13:12:30,707:INFO:Lars(random_state=123)
2023-06-16 13:12:30,707:INFO:create_model() successfully completed......................................
2023-06-16 13:12:30,772:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:30,772:INFO:Creating metrics dataframe
2023-06-16 13:12:30,776:INFO:Initializing Lasso Least Angle Regression
2023-06-16 13:12:30,777:INFO:Total runtime is 0.12309669653574624 minutes
2023-06-16 13:12:30,777:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:30,777:INFO:Initializing create_model()
2023-06-16 13:12:30,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:30,777:INFO:Checking exceptions
2023-06-16 13:12:30,777:INFO:Importing libraries
2023-06-16 13:12:30,777:INFO:Copying training dataset
2023-06-16 13:12:30,780:INFO:Defining folds
2023-06-16 13:12:30,780:INFO:Declaring metric variables
2023-06-16 13:12:30,780:INFO:Importing untrained model
2023-06-16 13:12:30,781:INFO:Lasso Least Angle Regression Imported successfully
2023-06-16 13:12:30,781:INFO:Starting cross validation
2023-06-16 13:12:30,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:30,919:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:30,926:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:30,934:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:30,954:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:30,962:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,056:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,173:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,223:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,228:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,239:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:12:31,307:INFO:Calculating mean and std
2023-06-16 13:12:31,308:INFO:Creating metrics dataframe
2023-06-16 13:12:31,321:INFO:Uploading results into container
2023-06-16 13:12:31,321:INFO:Uploading model into container now
2023-06-16 13:12:31,322:INFO:_master_model_container: 6
2023-06-16 13:12:31,322:INFO:_display_container: 2
2023-06-16 13:12:31,322:INFO:LassoLars(random_state=123)
2023-06-16 13:12:31,322:INFO:create_model() successfully completed......................................
2023-06-16 13:12:31,386:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:31,386:INFO:Creating metrics dataframe
2023-06-16 13:12:31,391:INFO:Initializing Orthogonal Matching Pursuit
2023-06-16 13:12:31,391:INFO:Total runtime is 0.13332225084304808 minutes
2023-06-16 13:12:31,391:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:31,392:INFO:Initializing create_model()
2023-06-16 13:12:31,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:31,392:INFO:Checking exceptions
2023-06-16 13:12:31,392:INFO:Importing libraries
2023-06-16 13:12:31,392:INFO:Copying training dataset
2023-06-16 13:12:31,394:INFO:Defining folds
2023-06-16 13:12:31,394:INFO:Declaring metric variables
2023-06-16 13:12:31,395:INFO:Importing untrained model
2023-06-16 13:12:31,395:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-16 13:12:31,395:INFO:Starting cross validation
2023-06-16 13:12:31,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:31,531:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,539:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,555:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,560:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,567:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,588:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,701:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,731:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,735:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,740:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:12:31,797:INFO:Calculating mean and std
2023-06-16 13:12:31,798:INFO:Creating metrics dataframe
2023-06-16 13:12:31,811:INFO:Uploading results into container
2023-06-16 13:12:31,811:INFO:Uploading model into container now
2023-06-16 13:12:31,812:INFO:_master_model_container: 7
2023-06-16 13:12:31,812:INFO:_display_container: 2
2023-06-16 13:12:31,812:INFO:OrthogonalMatchingPursuit()
2023-06-16 13:12:31,812:INFO:create_model() successfully completed......................................
2023-06-16 13:12:31,873:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:31,873:INFO:Creating metrics dataframe
2023-06-16 13:12:31,880:INFO:Initializing Bayesian Ridge
2023-06-16 13:12:31,880:INFO:Total runtime is 0.14146782557169596 minutes
2023-06-16 13:12:31,880:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:31,880:INFO:Initializing create_model()
2023-06-16 13:12:31,881:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:31,881:INFO:Checking exceptions
2023-06-16 13:12:31,881:INFO:Importing libraries
2023-06-16 13:12:31,881:INFO:Copying training dataset
2023-06-16 13:12:31,883:INFO:Defining folds
2023-06-16 13:12:31,883:INFO:Declaring metric variables
2023-06-16 13:12:31,884:INFO:Importing untrained model
2023-06-16 13:12:31,884:INFO:Bayesian Ridge Imported successfully
2023-06-16 13:12:31,884:INFO:Starting cross validation
2023-06-16 13:12:31,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:32,345:INFO:Calculating mean and std
2023-06-16 13:12:32,346:INFO:Creating metrics dataframe
2023-06-16 13:12:32,384:INFO:Uploading results into container
2023-06-16 13:12:32,385:INFO:Uploading model into container now
2023-06-16 13:12:32,386:INFO:_master_model_container: 8
2023-06-16 13:12:32,386:INFO:_display_container: 2
2023-06-16 13:12:32,386:INFO:BayesianRidge()
2023-06-16 13:12:32,386:INFO:create_model() successfully completed......................................
2023-06-16 13:12:32,446:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:32,446:INFO:Creating metrics dataframe
2023-06-16 13:12:32,452:INFO:Initializing Passive Aggressive Regressor
2023-06-16 13:12:32,452:INFO:Total runtime is 0.15101495583852131 minutes
2023-06-16 13:12:32,452:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:32,453:INFO:Initializing create_model()
2023-06-16 13:12:32,453:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:32,453:INFO:Checking exceptions
2023-06-16 13:12:32,453:INFO:Importing libraries
2023-06-16 13:12:32,453:INFO:Copying training dataset
2023-06-16 13:12:32,456:INFO:Defining folds
2023-06-16 13:12:32,457:INFO:Declaring metric variables
2023-06-16 13:12:32,457:INFO:Importing untrained model
2023-06-16 13:12:32,458:INFO:Passive Aggressive Regressor Imported successfully
2023-06-16 13:12:32,458:INFO:Starting cross validation
2023-06-16 13:12:32,461:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:33,040:INFO:Calculating mean and std
2023-06-16 13:12:33,041:INFO:Creating metrics dataframe
2023-06-16 13:12:33,055:INFO:Uploading results into container
2023-06-16 13:12:33,056:INFO:Uploading model into container now
2023-06-16 13:12:33,056:INFO:_master_model_container: 9
2023-06-16 13:12:33,056:INFO:_display_container: 2
2023-06-16 13:12:33,057:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 13:12:33,057:INFO:create_model() successfully completed......................................
2023-06-16 13:12:33,119:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:33,119:INFO:Creating metrics dataframe
2023-06-16 13:12:33,124:INFO:Initializing Huber Regressor
2023-06-16 13:12:33,124:INFO:Total runtime is 0.1622130274772644 minutes
2023-06-16 13:12:33,125:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:33,125:INFO:Initializing create_model()
2023-06-16 13:12:33,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:33,125:INFO:Checking exceptions
2023-06-16 13:12:33,125:INFO:Importing libraries
2023-06-16 13:12:33,125:INFO:Copying training dataset
2023-06-16 13:12:33,128:INFO:Defining folds
2023-06-16 13:12:33,129:INFO:Declaring metric variables
2023-06-16 13:12:33,129:INFO:Importing untrained model
2023-06-16 13:12:33,129:INFO:Huber Regressor Imported successfully
2023-06-16 13:12:33,130:INFO:Starting cross validation
2023-06-16 13:12:33,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:33,409:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,409:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,409:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,409:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,610:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,620:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,624:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,642:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:12:33,695:INFO:Calculating mean and std
2023-06-16 13:12:33,696:INFO:Creating metrics dataframe
2023-06-16 13:12:33,715:INFO:Uploading results into container
2023-06-16 13:12:33,716:INFO:Uploading model into container now
2023-06-16 13:12:33,717:INFO:_master_model_container: 10
2023-06-16 13:12:33,717:INFO:_display_container: 2
2023-06-16 13:12:33,718:INFO:HuberRegressor()
2023-06-16 13:12:33,718:INFO:create_model() successfully completed......................................
2023-06-16 13:12:33,780:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:33,780:INFO:Creating metrics dataframe
2023-06-16 13:12:33,785:INFO:Initializing K Neighbors Regressor
2023-06-16 13:12:33,785:INFO:Total runtime is 0.17322115103403726 minutes
2023-06-16 13:12:33,785:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:33,786:INFO:Initializing create_model()
2023-06-16 13:12:33,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:33,786:INFO:Checking exceptions
2023-06-16 13:12:33,786:INFO:Importing libraries
2023-06-16 13:12:33,786:INFO:Copying training dataset
2023-06-16 13:12:33,789:INFO:Defining folds
2023-06-16 13:12:33,789:INFO:Declaring metric variables
2023-06-16 13:12:33,790:INFO:Importing untrained model
2023-06-16 13:12:33,790:INFO:K Neighbors Regressor Imported successfully
2023-06-16 13:12:33,790:INFO:Starting cross validation
2023-06-16 13:12:33,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:34,675:INFO:Calculating mean and std
2023-06-16 13:12:34,675:INFO:Creating metrics dataframe
2023-06-16 13:12:34,697:INFO:Uploading results into container
2023-06-16 13:12:34,697:INFO:Uploading model into container now
2023-06-16 13:12:34,698:INFO:_master_model_container: 11
2023-06-16 13:12:34,698:INFO:_display_container: 2
2023-06-16 13:12:34,698:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-16 13:12:34,698:INFO:create_model() successfully completed......................................
2023-06-16 13:12:34,766:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:34,766:INFO:Creating metrics dataframe
2023-06-16 13:12:34,772:INFO:Initializing Decision Tree Regressor
2023-06-16 13:12:34,772:INFO:Total runtime is 0.18968071937561035 minutes
2023-06-16 13:12:34,772:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:34,773:INFO:Initializing create_model()
2023-06-16 13:12:34,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:34,773:INFO:Checking exceptions
2023-06-16 13:12:34,773:INFO:Importing libraries
2023-06-16 13:12:34,773:INFO:Copying training dataset
2023-06-16 13:12:34,777:INFO:Defining folds
2023-06-16 13:12:34,777:INFO:Declaring metric variables
2023-06-16 13:12:34,777:INFO:Importing untrained model
2023-06-16 13:12:34,778:INFO:Decision Tree Regressor Imported successfully
2023-06-16 13:12:34,779:INFO:Starting cross validation
2023-06-16 13:12:34,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:35,414:INFO:Calculating mean and std
2023-06-16 13:12:35,415:INFO:Creating metrics dataframe
2023-06-16 13:12:35,445:INFO:Uploading results into container
2023-06-16 13:12:35,446:INFO:Uploading model into container now
2023-06-16 13:12:35,446:INFO:_master_model_container: 12
2023-06-16 13:12:35,446:INFO:_display_container: 2
2023-06-16 13:12:35,447:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 13:12:35,447:INFO:create_model() successfully completed......................................
2023-06-16 13:12:35,519:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:35,519:INFO:Creating metrics dataframe
2023-06-16 13:12:35,527:INFO:Initializing Random Forest Regressor
2023-06-16 13:12:35,527:INFO:Total runtime is 0.20225799481074014 minutes
2023-06-16 13:12:35,528:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:35,528:INFO:Initializing create_model()
2023-06-16 13:12:35,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:35,528:INFO:Checking exceptions
2023-06-16 13:12:35,528:INFO:Importing libraries
2023-06-16 13:12:35,528:INFO:Copying training dataset
2023-06-16 13:12:35,533:INFO:Defining folds
2023-06-16 13:12:35,533:INFO:Declaring metric variables
2023-06-16 13:12:35,533:INFO:Importing untrained model
2023-06-16 13:12:35,535:INFO:Random Forest Regressor Imported successfully
2023-06-16 13:12:35,535:INFO:Starting cross validation
2023-06-16 13:12:35,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:37,933:INFO:Calculating mean and std
2023-06-16 13:12:37,933:INFO:Creating metrics dataframe
2023-06-16 13:12:37,983:INFO:Uploading results into container
2023-06-16 13:12:37,985:INFO:Uploading model into container now
2023-06-16 13:12:37,985:INFO:_master_model_container: 13
2023-06-16 13:12:37,985:INFO:_display_container: 2
2023-06-16 13:12:37,986:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-16 13:12:37,986:INFO:create_model() successfully completed......................................
2023-06-16 13:12:38,059:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:38,060:INFO:Creating metrics dataframe
2023-06-16 13:12:38,067:INFO:Initializing Extra Trees Regressor
2023-06-16 13:12:38,067:INFO:Total runtime is 0.244586447874705 minutes
2023-06-16 13:12:38,068:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:38,068:INFO:Initializing create_model()
2023-06-16 13:12:38,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:38,068:INFO:Checking exceptions
2023-06-16 13:12:38,068:INFO:Importing libraries
2023-06-16 13:12:38,068:INFO:Copying training dataset
2023-06-16 13:12:38,074:INFO:Defining folds
2023-06-16 13:12:38,074:INFO:Declaring metric variables
2023-06-16 13:12:38,075:INFO:Importing untrained model
2023-06-16 13:12:38,075:INFO:Extra Trees Regressor Imported successfully
2023-06-16 13:12:38,077:INFO:Starting cross validation
2023-06-16 13:12:38,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:40,372:INFO:Calculating mean and std
2023-06-16 13:12:40,373:INFO:Creating metrics dataframe
2023-06-16 13:12:40,408:INFO:Uploading results into container
2023-06-16 13:12:40,409:INFO:Uploading model into container now
2023-06-16 13:12:40,409:INFO:_master_model_container: 14
2023-06-16 13:12:40,409:INFO:_display_container: 2
2023-06-16 13:12:40,410:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-16 13:12:40,410:INFO:create_model() successfully completed......................................
2023-06-16 13:12:40,480:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:40,480:INFO:Creating metrics dataframe
2023-06-16 13:12:40,486:INFO:Initializing AdaBoost Regressor
2023-06-16 13:12:40,486:INFO:Total runtime is 0.2849156339963277 minutes
2023-06-16 13:12:40,486:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:40,487:INFO:Initializing create_model()
2023-06-16 13:12:40,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:40,487:INFO:Checking exceptions
2023-06-16 13:12:40,487:INFO:Importing libraries
2023-06-16 13:12:40,487:INFO:Copying training dataset
2023-06-16 13:12:40,491:INFO:Defining folds
2023-06-16 13:12:40,492:INFO:Declaring metric variables
2023-06-16 13:12:40,492:INFO:Importing untrained model
2023-06-16 13:12:40,493:INFO:AdaBoost Regressor Imported successfully
2023-06-16 13:12:40,494:INFO:Starting cross validation
2023-06-16 13:12:40,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:40,969:INFO:Calculating mean and std
2023-06-16 13:12:40,970:INFO:Creating metrics dataframe
2023-06-16 13:12:40,999:INFO:Uploading results into container
2023-06-16 13:12:40,999:INFO:Uploading model into container now
2023-06-16 13:12:41,000:INFO:_master_model_container: 15
2023-06-16 13:12:41,000:INFO:_display_container: 2
2023-06-16 13:12:41,000:INFO:AdaBoostRegressor(random_state=123)
2023-06-16 13:12:41,000:INFO:create_model() successfully completed......................................
2023-06-16 13:12:41,060:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:41,060:INFO:Creating metrics dataframe
2023-06-16 13:12:41,064:INFO:Initializing Gradient Boosting Regressor
2023-06-16 13:12:41,064:INFO:Total runtime is 0.29454767306645707 minutes
2023-06-16 13:12:41,064:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:41,065:INFO:Initializing create_model()
2023-06-16 13:12:41,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:41,065:INFO:Checking exceptions
2023-06-16 13:12:41,065:INFO:Importing libraries
2023-06-16 13:12:41,065:INFO:Copying training dataset
2023-06-16 13:12:41,068:INFO:Defining folds
2023-06-16 13:12:41,068:INFO:Declaring metric variables
2023-06-16 13:12:41,068:INFO:Importing untrained model
2023-06-16 13:12:41,068:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 13:12:41,069:INFO:Starting cross validation
2023-06-16 13:12:41,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:41,723:INFO:Calculating mean and std
2023-06-16 13:12:41,723:INFO:Creating metrics dataframe
2023-06-16 13:12:41,753:INFO:Uploading results into container
2023-06-16 13:12:41,754:INFO:Uploading model into container now
2023-06-16 13:12:41,754:INFO:_master_model_container: 16
2023-06-16 13:12:41,756:INFO:_display_container: 2
2023-06-16 13:12:41,756:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:12:41,756:INFO:create_model() successfully completed......................................
2023-06-16 13:12:41,815:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:41,815:INFO:Creating metrics dataframe
2023-06-16 13:12:41,820:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 13:12:41,821:INFO:Total runtime is 0.3071671923001607 minutes
2023-06-16 13:12:41,821:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:41,821:INFO:Initializing create_model()
2023-06-16 13:12:41,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:41,821:INFO:Checking exceptions
2023-06-16 13:12:41,821:INFO:Importing libraries
2023-06-16 13:12:41,821:INFO:Copying training dataset
2023-06-16 13:12:41,825:INFO:Defining folds
2023-06-16 13:12:41,825:INFO:Declaring metric variables
2023-06-16 13:12:41,825:INFO:Importing untrained model
2023-06-16 13:12:41,826:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 13:12:41,826:INFO:Starting cross validation
2023-06-16 13:12:41,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:42,479:INFO:Calculating mean and std
2023-06-16 13:12:42,479:INFO:Creating metrics dataframe
2023-06-16 13:12:42,511:INFO:Uploading results into container
2023-06-16 13:12:42,512:INFO:Uploading model into container now
2023-06-16 13:12:42,512:INFO:_master_model_container: 17
2023-06-16 13:12:42,512:INFO:_display_container: 2
2023-06-16 13:12:42,513:INFO:LGBMRegressor(random_state=123)
2023-06-16 13:12:42,513:INFO:create_model() successfully completed......................................
2023-06-16 13:12:42,576:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:42,576:INFO:Creating metrics dataframe
2023-06-16 13:12:42,580:INFO:Initializing Dummy Regressor
2023-06-16 13:12:42,581:INFO:Total runtime is 0.31983280181884766 minutes
2023-06-16 13:12:42,581:INFO:SubProcess create_model() called ==================================
2023-06-16 13:12:42,581:INFO:Initializing create_model()
2023-06-16 13:12:42,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002556F3E4DC8>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:42,581:INFO:Checking exceptions
2023-06-16 13:12:42,581:INFO:Importing libraries
2023-06-16 13:12:42,581:INFO:Copying training dataset
2023-06-16 13:12:42,586:INFO:Defining folds
2023-06-16 13:12:42,586:INFO:Declaring metric variables
2023-06-16 13:12:42,587:INFO:Importing untrained model
2023-06-16 13:12:42,587:INFO:Dummy Regressor Imported successfully
2023-06-16 13:12:42,588:INFO:Starting cross validation
2023-06-16 13:12:42,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:12:43,023:INFO:Calculating mean and std
2023-06-16 13:12:43,024:INFO:Creating metrics dataframe
2023-06-16 13:12:43,056:INFO:Uploading results into container
2023-06-16 13:12:43,056:INFO:Uploading model into container now
2023-06-16 13:12:43,056:INFO:_master_model_container: 18
2023-06-16 13:12:43,057:INFO:_display_container: 2
2023-06-16 13:12:43,057:INFO:DummyRegressor()
2023-06-16 13:12:43,057:INFO:create_model() successfully completed......................................
2023-06-16 13:12:43,117:INFO:SubProcess create_model() end ==================================
2023-06-16 13:12:43,117:INFO:Creating metrics dataframe
2023-06-16 13:12:43,126:INFO:Initializing create_model()
2023-06-16 13:12:43,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:12:43,126:INFO:Checking exceptions
2023-06-16 13:12:43,127:INFO:Importing libraries
2023-06-16 13:12:43,128:INFO:Copying training dataset
2023-06-16 13:12:43,131:INFO:Defining folds
2023-06-16 13:12:43,131:INFO:Declaring metric variables
2023-06-16 13:12:43,131:INFO:Importing untrained model
2023-06-16 13:12:43,131:INFO:Declaring custom model
2023-06-16 13:12:43,132:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 13:12:43,133:INFO:Cross validation set to False
2023-06-16 13:12:43,133:INFO:Fitting Model
2023-06-16 13:12:43,293:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:12:43,293:INFO:create_model() successfully completed......................................
2023-06-16 13:12:43,376:INFO:_master_model_container: 18
2023-06-16 13:12:43,376:INFO:_display_container: 2
2023-06-16 13:12:43,376:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:12:43,376:INFO:compare_models() successfully completed......................................
2023-06-16 13:12:43,377:INFO:Initializing plot_model()
2023-06-16 13:12:43,377:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002556C429D48>, system=True)
2023-06-16 13:12:43,377:INFO:Checking exceptions
2023-06-16 13:12:43,419:INFO:Preloading libraries
2023-06-16 13:12:43,427:INFO:Copying training dataset
2023-06-16 13:12:43,427:INFO:Plot type: feature
2023-06-16 13:12:43,428:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 13:12:51,182:INFO:Visual Rendered Successfully
2023-06-16 13:12:51,347:INFO:plot_model() successfully completed......................................
2023-06-16 13:12:51,399:INFO:Initializing save_model()
2023-06-16 13:12:51,399:INFO:save_model(model=GradientBoostingRegressor(random_state=123), model_name=/content/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-16 13:12:51,399:INFO:Adding model into prep_pipe
2023-06-16 13:13:20,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:13:20,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:13:20,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:13:20,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:13:21,356:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:13:26,973:INFO:PyCaret RegressionExperiment
2023-06-16 13:13:26,973:INFO:Logging name: reg-default-name
2023-06-16 13:13:26,973:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-16 13:13:26,973:INFO:version 3.0.2
2023-06-16 13:13:26,973:INFO:Initializing setup()
2023-06-16 13:13:26,973:INFO:self.USI: 2f82
2023-06-16 13:13:26,973:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'y', 'pipeline', 'y_train', 'exp_id', 'X', 'logging_param', 'exp_name_log', '_available_plots', 'gpu_param', 'target_param', 'memory', 'data', 'y_test', 'fold_shuffle_param', 'log_plots_param', 'X_train', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'transform_target_param', 'USI', 'X_test', 'html_param', 'fold_groups_param', 'seed'}
2023-06-16 13:13:26,973:INFO:Checking environment
2023-06-16 13:13:26,973:INFO:python_version: 3.7.6
2023-06-16 13:13:26,973:INFO:python_build: ('tags/v3.7.6:43364a7ae0', 'Dec 19 2019 00:42:30')
2023-06-16 13:13:26,973:INFO:machine: AMD64
2023-06-16 13:13:26,973:INFO:platform: Windows-10-10.0.22621-SP0
2023-06-16 13:13:26,980:INFO:Memory: svmem(total=7958728704, available=1921433600, percent=75.9, used=6037295104, free=1921433600)
2023-06-16 13:13:26,980:INFO:Physical Core: 6
2023-06-16 13:13:26,981:INFO:Logical Core: 6
2023-06-16 13:13:26,981:INFO:Checking libraries
2023-06-16 13:13:26,981:INFO:System:
2023-06-16 13:13:26,981:INFO:    python: 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit (AMD64)]
2023-06-16 13:13:26,981:INFO:executable: C:\Users\Amani\AppData\Local\Programs\Python\Python37\python.exe
2023-06-16 13:13:26,981:INFO:   machine: Windows-10-10.0.22621-SP0
2023-06-16 13:13:26,981:INFO:PyCaret required dependencies:
2023-06-16 13:13:26,981:INFO:                 pip: 23.1.2
2023-06-16 13:13:26,981:INFO:          setuptools: 41.2.0
2023-06-16 13:13:26,981:INFO:             pycaret: 3.0.2
2023-06-16 13:13:26,981:INFO:             IPython: 7.34.0
2023-06-16 13:13:26,981:INFO:          ipywidgets: 8.0.6
2023-06-16 13:13:26,981:INFO:                tqdm: 4.65.0
2023-06-16 13:13:26,981:INFO:               numpy: 1.21.6
2023-06-16 13:13:26,981:INFO:              pandas: 1.3.5
2023-06-16 13:13:26,982:INFO:              jinja2: 3.1.2
2023-06-16 13:13:26,982:INFO:               scipy: 1.7.3
2023-06-16 13:13:26,982:INFO:              joblib: 1.2.0
2023-06-16 13:13:26,982:INFO:             sklearn: 1.0.2
2023-06-16 13:13:26,982:INFO:                pyod: 1.0.9
2023-06-16 13:13:26,982:INFO:            imblearn: 0.10.1
2023-06-16 13:13:26,982:INFO:   category_encoders: 2.6.1
2023-06-16 13:13:26,982:INFO:            lightgbm: 3.3.5
2023-06-16 13:13:26,982:INFO:               numba: 0.56.4
2023-06-16 13:13:26,982:INFO:            requests: 2.28.2
2023-06-16 13:13:26,982:INFO:          matplotlib: 3.5.3
2023-06-16 13:13:26,982:INFO:          scikitplot: 0.3.7
2023-06-16 13:13:26,982:INFO:         yellowbrick: 1.5
2023-06-16 13:13:26,982:INFO:              plotly: 5.15.0
2023-06-16 13:13:26,982:INFO:             kaleido: 0.2.1
2023-06-16 13:13:26,983:INFO:         statsmodels: 0.13.5
2023-06-16 13:13:26,983:INFO:              sktime: 0.17.0
2023-06-16 13:13:26,983:INFO:               tbats: 1.1.3
2023-06-16 13:13:26,983:INFO:            pmdarima: 2.0.3
2023-06-16 13:13:26,983:INFO:              psutil: 5.9.5
2023-06-16 13:13:26,983:INFO:PyCaret optional dependencies:
2023-06-16 13:13:26,994:INFO:                shap: Not installed
2023-06-16 13:13:26,994:INFO:           interpret: Not installed
2023-06-16 13:13:26,994:INFO:                umap: Not installed
2023-06-16 13:13:26,994:INFO:    pandas_profiling: Not installed
2023-06-16 13:13:26,994:INFO:  explainerdashboard: Not installed
2023-06-16 13:13:26,994:INFO:             autoviz: Not installed
2023-06-16 13:13:26,994:INFO:           fairlearn: Not installed
2023-06-16 13:13:26,994:INFO:             xgboost: Not installed
2023-06-16 13:13:26,994:INFO:            catboost: Not installed
2023-06-16 13:13:26,995:INFO:              kmodes: Not installed
2023-06-16 13:13:26,995:INFO:             mlxtend: Not installed
2023-06-16 13:13:26,995:INFO:       statsforecast: Not installed
2023-06-16 13:13:26,995:INFO:        tune_sklearn: Not installed
2023-06-16 13:13:26,996:INFO:                 ray: Not installed
2023-06-16 13:13:26,996:INFO:            hyperopt: Not installed
2023-06-16 13:13:26,996:INFO:              optuna: Not installed
2023-06-16 13:13:26,996:INFO:               skopt: Not installed
2023-06-16 13:13:26,996:INFO:              mlflow: 1.30.1
2023-06-16 13:13:26,996:INFO:              gradio: Not installed
2023-06-16 13:13:26,996:INFO:             fastapi: Not installed
2023-06-16 13:13:26,996:INFO:             uvicorn: Not installed
2023-06-16 13:13:26,996:INFO:              m2cgen: Not installed
2023-06-16 13:13:26,996:INFO:           evidently: Not installed
2023-06-16 13:13:26,996:INFO:               fugue: Not installed
2023-06-16 13:13:26,997:INFO:           streamlit: Not installed
2023-06-16 13:13:26,997:INFO:             prophet: Not installed
2023-06-16 13:13:26,997:INFO:None
2023-06-16 13:13:26,997:INFO:Set up data.
2023-06-16 13:13:27,007:INFO:Set up train/test split.
2023-06-16 13:13:27,013:INFO:Set up index.
2023-06-16 13:13:27,014:INFO:Set up folding strategy.
2023-06-16 13:13:27,014:INFO:Assigning column types.
2023-06-16 13:13:27,023:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 13:13:27,024:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,031:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,040:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,143:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,246:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,254:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,262:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,449:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-16 13:13:27,458:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,469:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,663:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,672:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:27,867:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-16 13:13:27,883:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:27,998:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,329:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-16 13:13:28,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,723:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 13:13:28,845:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:28,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:28,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 13:13:29,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,162:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-16 13:13:29,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:29,574:INFO:Preparing preprocessing pipeline...
2023-06-16 13:13:29,574:INFO:Set up simple imputation.
2023-06-16 13:13:29,578:INFO:Set up encoding of ordinal features.
2023-06-16 13:13:29,582:INFO:Set up encoding of categorical features.
2023-06-16 13:13:29,712:INFO:Finished creating preprocessing pipeline.
2023-06-16 13:13:29,778:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-06-16 13:13:29,778:INFO:Creating final display dataframe.
2023-06-16 13:13:30,106:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              2f82
2023-06-16 13:13:30,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:30,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:30,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:30,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 13:13:30,531:INFO:setup() successfully completed in 3.58s...............
2023-06-16 13:13:30,531:INFO:Initializing compare_models()
2023-06-16 13:13:30,531:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-16 13:13:30,531:INFO:Checking exceptions
2023-06-16 13:13:30,533:INFO:Preparing display monitor
2023-06-16 13:13:30,537:INFO:Initializing Linear Regression
2023-06-16 13:13:30,538:INFO:Total runtime is 0.0 minutes
2023-06-16 13:13:30,538:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:30,538:INFO:Initializing create_model()
2023-06-16 13:13:30,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:30,539:INFO:Checking exceptions
2023-06-16 13:13:30,539:INFO:Importing libraries
2023-06-16 13:13:30,539:INFO:Copying training dataset
2023-06-16 13:13:30,546:INFO:Defining folds
2023-06-16 13:13:30,546:INFO:Declaring metric variables
2023-06-16 13:13:30,546:INFO:Importing untrained model
2023-06-16 13:13:30,547:INFO:Linear Regression Imported successfully
2023-06-16 13:13:30,548:INFO:Starting cross validation
2023-06-16 13:13:30,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:35,304:INFO:Calculating mean and std
2023-06-16 13:13:35,306:INFO:Creating metrics dataframe
2023-06-16 13:13:35,353:INFO:Uploading results into container
2023-06-16 13:13:35,354:INFO:Uploading model into container now
2023-06-16 13:13:35,355:INFO:_master_model_container: 1
2023-06-16 13:13:35,355:INFO:_display_container: 2
2023-06-16 13:13:35,355:INFO:LinearRegression(n_jobs=-1)
2023-06-16 13:13:35,355:INFO:create_model() successfully completed......................................
2023-06-16 13:13:35,429:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:35,429:INFO:Creating metrics dataframe
2023-06-16 13:13:35,435:INFO:Initializing Lasso Regression
2023-06-16 13:13:35,435:INFO:Total runtime is 0.08163409233093262 minutes
2023-06-16 13:13:35,436:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:35,436:INFO:Initializing create_model()
2023-06-16 13:13:35,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:35,436:INFO:Checking exceptions
2023-06-16 13:13:35,436:INFO:Importing libraries
2023-06-16 13:13:35,436:INFO:Copying training dataset
2023-06-16 13:13:35,441:INFO:Defining folds
2023-06-16 13:13:35,441:INFO:Declaring metric variables
2023-06-16 13:13:35,442:INFO:Importing untrained model
2023-06-16 13:13:35,442:INFO:Lasso Regression Imported successfully
2023-06-16 13:13:35,445:INFO:Starting cross validation
2023-06-16 13:13:35,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:35,920:INFO:Calculating mean and std
2023-06-16 13:13:35,920:INFO:Creating metrics dataframe
2023-06-16 13:13:35,958:INFO:Uploading results into container
2023-06-16 13:13:35,959:INFO:Uploading model into container now
2023-06-16 13:13:35,959:INFO:_master_model_container: 2
2023-06-16 13:13:35,960:INFO:_display_container: 2
2023-06-16 13:13:35,960:INFO:Lasso(random_state=123)
2023-06-16 13:13:35,960:INFO:create_model() successfully completed......................................
2023-06-16 13:13:36,020:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:36,020:INFO:Creating metrics dataframe
2023-06-16 13:13:36,025:INFO:Initializing Ridge Regression
2023-06-16 13:13:36,025:INFO:Total runtime is 0.09146469036738078 minutes
2023-06-16 13:13:36,025:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:36,026:INFO:Initializing create_model()
2023-06-16 13:13:36,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:36,026:INFO:Checking exceptions
2023-06-16 13:13:36,026:INFO:Importing libraries
2023-06-16 13:13:36,026:INFO:Copying training dataset
2023-06-16 13:13:36,030:INFO:Defining folds
2023-06-16 13:13:36,030:INFO:Declaring metric variables
2023-06-16 13:13:36,030:INFO:Importing untrained model
2023-06-16 13:13:36,032:INFO:Ridge Regression Imported successfully
2023-06-16 13:13:36,033:INFO:Starting cross validation
2023-06-16 13:13:36,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:36,572:INFO:Calculating mean and std
2023-06-16 13:13:36,574:INFO:Creating metrics dataframe
2023-06-16 13:13:36,605:INFO:Uploading results into container
2023-06-16 13:13:36,605:INFO:Uploading model into container now
2023-06-16 13:13:36,606:INFO:_master_model_container: 3
2023-06-16 13:13:36,606:INFO:_display_container: 2
2023-06-16 13:13:36,606:INFO:Ridge(random_state=123)
2023-06-16 13:13:36,606:INFO:create_model() successfully completed......................................
2023-06-16 13:13:36,666:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:36,666:INFO:Creating metrics dataframe
2023-06-16 13:13:36,670:INFO:Initializing Elastic Net
2023-06-16 13:13:36,670:INFO:Total runtime is 0.10221369663874308 minutes
2023-06-16 13:13:36,670:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:36,671:INFO:Initializing create_model()
2023-06-16 13:13:36,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:36,671:INFO:Checking exceptions
2023-06-16 13:13:36,671:INFO:Importing libraries
2023-06-16 13:13:36,671:INFO:Copying training dataset
2023-06-16 13:13:36,674:INFO:Defining folds
2023-06-16 13:13:36,675:INFO:Declaring metric variables
2023-06-16 13:13:36,675:INFO:Importing untrained model
2023-06-16 13:13:36,678:INFO:Elastic Net Imported successfully
2023-06-16 13:13:36,679:INFO:Starting cross validation
2023-06-16 13:13:36,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:37,197:INFO:Calculating mean and std
2023-06-16 13:13:37,198:INFO:Creating metrics dataframe
2023-06-16 13:13:37,229:INFO:Uploading results into container
2023-06-16 13:13:37,229:INFO:Uploading model into container now
2023-06-16 13:13:37,230:INFO:_master_model_container: 4
2023-06-16 13:13:37,230:INFO:_display_container: 2
2023-06-16 13:13:37,230:INFO:ElasticNet(random_state=123)
2023-06-16 13:13:37,230:INFO:create_model() successfully completed......................................
2023-06-16 13:13:37,290:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:37,290:INFO:Creating metrics dataframe
2023-06-16 13:13:37,295:INFO:Initializing Least Angle Regression
2023-06-16 13:13:37,295:INFO:Total runtime is 0.11263098716735839 minutes
2023-06-16 13:13:37,296:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:37,296:INFO:Initializing create_model()
2023-06-16 13:13:37,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:37,296:INFO:Checking exceptions
2023-06-16 13:13:37,296:INFO:Importing libraries
2023-06-16 13:13:37,296:INFO:Copying training dataset
2023-06-16 13:13:37,299:INFO:Defining folds
2023-06-16 13:13:37,299:INFO:Declaring metric variables
2023-06-16 13:13:37,300:INFO:Importing untrained model
2023-06-16 13:13:37,300:INFO:Least Angle Regression Imported successfully
2023-06-16 13:13:37,301:INFO:Starting cross validation
2023-06-16 13:13:37,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:37,454:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,489:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,625:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,636:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,641:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,646:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:37,726:INFO:Calculating mean and std
2023-06-16 13:13:37,728:INFO:Creating metrics dataframe
2023-06-16 13:13:37,758:INFO:Uploading results into container
2023-06-16 13:13:37,759:INFO:Uploading model into container now
2023-06-16 13:13:37,759:INFO:_master_model_container: 5
2023-06-16 13:13:37,759:INFO:_display_container: 2
2023-06-16 13:13:37,760:INFO:Lars(random_state=123)
2023-06-16 13:13:37,760:INFO:create_model() successfully completed......................................
2023-06-16 13:13:37,817:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:37,817:INFO:Creating metrics dataframe
2023-06-16 13:13:37,821:INFO:Initializing Lasso Least Angle Regression
2023-06-16 13:13:37,822:INFO:Total runtime is 0.12141597270965576 minutes
2023-06-16 13:13:37,822:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:37,822:INFO:Initializing create_model()
2023-06-16 13:13:37,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:37,822:INFO:Checking exceptions
2023-06-16 13:13:37,822:INFO:Importing libraries
2023-06-16 13:13:37,822:INFO:Copying training dataset
2023-06-16 13:13:37,825:INFO:Defining folds
2023-06-16 13:13:37,825:INFO:Declaring metric variables
2023-06-16 13:13:37,826:INFO:Importing untrained model
2023-06-16 13:13:37,826:INFO:Lasso Least Angle Regression Imported successfully
2023-06-16 13:13:37,826:INFO:Starting cross validation
2023-06-16 13:13:37,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:37,965:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:37,969:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:37,974:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:37,974:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:37,975:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,016:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,122:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,140:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,156:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,157:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  FutureWarning,

2023-06-16 13:13:38,225:INFO:Calculating mean and std
2023-06-16 13:13:38,226:INFO:Creating metrics dataframe
2023-06-16 13:13:38,259:INFO:Uploading results into container
2023-06-16 13:13:38,260:INFO:Uploading model into container now
2023-06-16 13:13:38,260:INFO:_master_model_container: 6
2023-06-16 13:13:38,260:INFO:_display_container: 2
2023-06-16 13:13:38,261:INFO:LassoLars(random_state=123)
2023-06-16 13:13:38,261:INFO:create_model() successfully completed......................................
2023-06-16 13:13:38,319:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:38,319:INFO:Creating metrics dataframe
2023-06-16 13:13:38,323:INFO:Initializing Orthogonal Matching Pursuit
2023-06-16 13:13:38,323:INFO:Total runtime is 0.12975775400797526 minutes
2023-06-16 13:13:38,323:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:38,324:INFO:Initializing create_model()
2023-06-16 13:13:38,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:38,324:INFO:Checking exceptions
2023-06-16 13:13:38,324:INFO:Importing libraries
2023-06-16 13:13:38,324:INFO:Copying training dataset
2023-06-16 13:13:38,327:INFO:Defining folds
2023-06-16 13:13:38,327:INFO:Declaring metric variables
2023-06-16 13:13:38,328:INFO:Importing untrained model
2023-06-16 13:13:38,328:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-16 13:13:38,329:INFO:Starting cross validation
2023-06-16 13:13:38,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:38,458:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,463:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,467:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,475:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,487:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,499:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,631:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,643:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,649:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,656:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_base.py:138: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  FutureWarning,

2023-06-16 13:13:38,730:INFO:Calculating mean and std
2023-06-16 13:13:38,731:INFO:Creating metrics dataframe
2023-06-16 13:13:38,762:INFO:Uploading results into container
2023-06-16 13:13:38,762:INFO:Uploading model into container now
2023-06-16 13:13:38,763:INFO:_master_model_container: 7
2023-06-16 13:13:38,763:INFO:_display_container: 2
2023-06-16 13:13:38,763:INFO:OrthogonalMatchingPursuit()
2023-06-16 13:13:38,763:INFO:create_model() successfully completed......................................
2023-06-16 13:13:38,822:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:38,822:INFO:Creating metrics dataframe
2023-06-16 13:13:38,827:INFO:Initializing Bayesian Ridge
2023-06-16 13:13:38,827:INFO:Total runtime is 0.13816563685735067 minutes
2023-06-16 13:13:38,827:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:38,827:INFO:Initializing create_model()
2023-06-16 13:13:38,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:38,827:INFO:Checking exceptions
2023-06-16 13:13:38,827:INFO:Importing libraries
2023-06-16 13:13:38,828:INFO:Copying training dataset
2023-06-16 13:13:38,832:INFO:Defining folds
2023-06-16 13:13:38,832:INFO:Declaring metric variables
2023-06-16 13:13:38,832:INFO:Importing untrained model
2023-06-16 13:13:38,833:INFO:Bayesian Ridge Imported successfully
2023-06-16 13:13:38,833:INFO:Starting cross validation
2023-06-16 13:13:38,834:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:39,251:INFO:Calculating mean and std
2023-06-16 13:13:39,252:INFO:Creating metrics dataframe
2023-06-16 13:13:39,283:INFO:Uploading results into container
2023-06-16 13:13:39,283:INFO:Uploading model into container now
2023-06-16 13:13:39,283:INFO:_master_model_container: 8
2023-06-16 13:13:39,283:INFO:_display_container: 2
2023-06-16 13:13:39,283:INFO:BayesianRidge()
2023-06-16 13:13:39,283:INFO:create_model() successfully completed......................................
2023-06-16 13:13:39,344:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:39,345:INFO:Creating metrics dataframe
2023-06-16 13:13:39,349:INFO:Initializing Passive Aggressive Regressor
2023-06-16 13:13:39,349:INFO:Total runtime is 0.1468707879384359 minutes
2023-06-16 13:13:39,349:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:39,349:INFO:Initializing create_model()
2023-06-16 13:13:39,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:39,350:INFO:Checking exceptions
2023-06-16 13:13:39,350:INFO:Importing libraries
2023-06-16 13:13:39,350:INFO:Copying training dataset
2023-06-16 13:13:39,352:INFO:Defining folds
2023-06-16 13:13:39,353:INFO:Declaring metric variables
2023-06-16 13:13:39,353:INFO:Importing untrained model
2023-06-16 13:13:39,353:INFO:Passive Aggressive Regressor Imported successfully
2023-06-16 13:13:39,355:INFO:Starting cross validation
2023-06-16 13:13:39,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:39,779:INFO:Calculating mean and std
2023-06-16 13:13:39,780:INFO:Creating metrics dataframe
2023-06-16 13:13:39,811:INFO:Uploading results into container
2023-06-16 13:13:39,812:INFO:Uploading model into container now
2023-06-16 13:13:39,812:INFO:_master_model_container: 9
2023-06-16 13:13:39,812:INFO:_display_container: 2
2023-06-16 13:13:39,812:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 13:13:39,812:INFO:create_model() successfully completed......................................
2023-06-16 13:13:39,873:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:39,873:INFO:Creating metrics dataframe
2023-06-16 13:13:39,879:INFO:Initializing Huber Regressor
2023-06-16 13:13:39,879:INFO:Total runtime is 0.155696435769399 minutes
2023-06-16 13:13:39,879:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:39,880:INFO:Initializing create_model()
2023-06-16 13:13:39,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:39,880:INFO:Checking exceptions
2023-06-16 13:13:39,880:INFO:Importing libraries
2023-06-16 13:13:39,880:INFO:Copying training dataset
2023-06-16 13:13:39,883:INFO:Defining folds
2023-06-16 13:13:39,883:INFO:Declaring metric variables
2023-06-16 13:13:39,884:INFO:Importing untrained model
2023-06-16 13:13:39,884:INFO:Huber Regressor Imported successfully
2023-06-16 13:13:39,885:INFO:Starting cross validation
2023-06-16 13:13:39,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:40,051:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:13:40,240:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:13:40,242:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:13:40,256:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:13:40,256:WARNING:C:\Users\Amani\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-16 13:13:40,334:INFO:Calculating mean and std
2023-06-16 13:13:40,336:INFO:Creating metrics dataframe
2023-06-16 13:13:40,368:INFO:Uploading results into container
2023-06-16 13:13:40,368:INFO:Uploading model into container now
2023-06-16 13:13:40,368:INFO:_master_model_container: 10
2023-06-16 13:13:40,369:INFO:_display_container: 2
2023-06-16 13:13:40,369:INFO:HuberRegressor()
2023-06-16 13:13:40,369:INFO:create_model() successfully completed......................................
2023-06-16 13:13:40,429:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:40,429:INFO:Creating metrics dataframe
2023-06-16 13:13:40,434:INFO:Initializing K Neighbors Regressor
2023-06-16 13:13:40,435:INFO:Total runtime is 0.16496453682581583 minutes
2023-06-16 13:13:40,436:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:40,436:INFO:Initializing create_model()
2023-06-16 13:13:40,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:40,436:INFO:Checking exceptions
2023-06-16 13:13:40,436:INFO:Importing libraries
2023-06-16 13:13:40,436:INFO:Copying training dataset
2023-06-16 13:13:40,440:INFO:Defining folds
2023-06-16 13:13:40,440:INFO:Declaring metric variables
2023-06-16 13:13:40,440:INFO:Importing untrained model
2023-06-16 13:13:40,441:INFO:K Neighbors Regressor Imported successfully
2023-06-16 13:13:40,441:INFO:Starting cross validation
2023-06-16 13:13:40,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:41,113:INFO:Calculating mean and std
2023-06-16 13:13:41,113:INFO:Creating metrics dataframe
2023-06-16 13:13:41,147:INFO:Uploading results into container
2023-06-16 13:13:41,148:INFO:Uploading model into container now
2023-06-16 13:13:41,148:INFO:_master_model_container: 11
2023-06-16 13:13:41,148:INFO:_display_container: 2
2023-06-16 13:13:41,149:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-16 13:13:41,149:INFO:create_model() successfully completed......................................
2023-06-16 13:13:41,211:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:41,211:INFO:Creating metrics dataframe
2023-06-16 13:13:41,216:INFO:Initializing Decision Tree Regressor
2023-06-16 13:13:41,216:INFO:Total runtime is 0.17798234224319456 minutes
2023-06-16 13:13:41,216:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:41,216:INFO:Initializing create_model()
2023-06-16 13:13:41,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:41,216:INFO:Checking exceptions
2023-06-16 13:13:41,216:INFO:Importing libraries
2023-06-16 13:13:41,216:INFO:Copying training dataset
2023-06-16 13:13:41,219:INFO:Defining folds
2023-06-16 13:13:41,220:INFO:Declaring metric variables
2023-06-16 13:13:41,220:INFO:Importing untrained model
2023-06-16 13:13:41,221:INFO:Decision Tree Regressor Imported successfully
2023-06-16 13:13:41,221:INFO:Starting cross validation
2023-06-16 13:13:41,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:41,652:INFO:Calculating mean and std
2023-06-16 13:13:41,653:INFO:Creating metrics dataframe
2023-06-16 13:13:41,687:INFO:Uploading results into container
2023-06-16 13:13:41,687:INFO:Uploading model into container now
2023-06-16 13:13:41,687:INFO:_master_model_container: 12
2023-06-16 13:13:41,687:INFO:_display_container: 2
2023-06-16 13:13:41,688:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 13:13:41,688:INFO:create_model() successfully completed......................................
2023-06-16 13:13:41,747:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:41,747:INFO:Creating metrics dataframe
2023-06-16 13:13:41,751:INFO:Initializing Random Forest Regressor
2023-06-16 13:13:41,751:INFO:Total runtime is 0.18690179189046222 minutes
2023-06-16 13:13:41,752:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:41,752:INFO:Initializing create_model()
2023-06-16 13:13:41,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:41,752:INFO:Checking exceptions
2023-06-16 13:13:41,752:INFO:Importing libraries
2023-06-16 13:13:41,752:INFO:Copying training dataset
2023-06-16 13:13:41,755:INFO:Defining folds
2023-06-16 13:13:41,755:INFO:Declaring metric variables
2023-06-16 13:13:41,756:INFO:Importing untrained model
2023-06-16 13:13:41,756:INFO:Random Forest Regressor Imported successfully
2023-06-16 13:13:41,757:INFO:Starting cross validation
2023-06-16 13:13:41,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:42,639:INFO:Calculating mean and std
2023-06-16 13:13:42,640:INFO:Creating metrics dataframe
2023-06-16 13:13:42,673:INFO:Uploading results into container
2023-06-16 13:13:42,673:INFO:Uploading model into container now
2023-06-16 13:13:42,674:INFO:_master_model_container: 13
2023-06-16 13:13:42,674:INFO:_display_container: 2
2023-06-16 13:13:42,674:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-16 13:13:42,674:INFO:create_model() successfully completed......................................
2023-06-16 13:13:42,735:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:42,735:INFO:Creating metrics dataframe
2023-06-16 13:13:42,739:INFO:Initializing Extra Trees Regressor
2023-06-16 13:13:42,739:INFO:Total runtime is 0.2033701141675313 minutes
2023-06-16 13:13:42,740:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:42,740:INFO:Initializing create_model()
2023-06-16 13:13:42,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:42,740:INFO:Checking exceptions
2023-06-16 13:13:42,740:INFO:Importing libraries
2023-06-16 13:13:42,740:INFO:Copying training dataset
2023-06-16 13:13:42,743:INFO:Defining folds
2023-06-16 13:13:42,745:INFO:Declaring metric variables
2023-06-16 13:13:42,745:INFO:Importing untrained model
2023-06-16 13:13:42,746:INFO:Extra Trees Regressor Imported successfully
2023-06-16 13:13:42,747:INFO:Starting cross validation
2023-06-16 13:13:42,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:43,602:INFO:Calculating mean and std
2023-06-16 13:13:43,603:INFO:Creating metrics dataframe
2023-06-16 13:13:43,636:INFO:Uploading results into container
2023-06-16 13:13:43,637:INFO:Uploading model into container now
2023-06-16 13:13:43,637:INFO:_master_model_container: 14
2023-06-16 13:13:43,637:INFO:_display_container: 2
2023-06-16 13:13:43,637:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-16 13:13:43,637:INFO:create_model() successfully completed......................................
2023-06-16 13:13:43,701:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:43,701:INFO:Creating metrics dataframe
2023-06-16 13:13:43,705:INFO:Initializing AdaBoost Regressor
2023-06-16 13:13:43,706:INFO:Total runtime is 0.2194798946380615 minutes
2023-06-16 13:13:43,706:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:43,706:INFO:Initializing create_model()
2023-06-16 13:13:43,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:43,706:INFO:Checking exceptions
2023-06-16 13:13:43,706:INFO:Importing libraries
2023-06-16 13:13:43,706:INFO:Copying training dataset
2023-06-16 13:13:43,710:INFO:Defining folds
2023-06-16 13:13:43,710:INFO:Declaring metric variables
2023-06-16 13:13:43,710:INFO:Importing untrained model
2023-06-16 13:13:43,711:INFO:AdaBoost Regressor Imported successfully
2023-06-16 13:13:43,711:INFO:Starting cross validation
2023-06-16 13:13:43,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:44,186:INFO:Calculating mean and std
2023-06-16 13:13:44,187:INFO:Creating metrics dataframe
2023-06-16 13:13:44,219:INFO:Uploading results into container
2023-06-16 13:13:44,220:INFO:Uploading model into container now
2023-06-16 13:13:44,220:INFO:_master_model_container: 15
2023-06-16 13:13:44,220:INFO:_display_container: 2
2023-06-16 13:13:44,220:INFO:AdaBoostRegressor(random_state=123)
2023-06-16 13:13:44,220:INFO:create_model() successfully completed......................................
2023-06-16 13:13:44,282:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:44,282:INFO:Creating metrics dataframe
2023-06-16 13:13:44,288:INFO:Initializing Gradient Boosting Regressor
2023-06-16 13:13:44,288:INFO:Total runtime is 0.22917604049046833 minutes
2023-06-16 13:13:44,288:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:44,288:INFO:Initializing create_model()
2023-06-16 13:13:44,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:44,288:INFO:Checking exceptions
2023-06-16 13:13:44,288:INFO:Importing libraries
2023-06-16 13:13:44,288:INFO:Copying training dataset
2023-06-16 13:13:44,292:INFO:Defining folds
2023-06-16 13:13:44,292:INFO:Declaring metric variables
2023-06-16 13:13:44,292:INFO:Importing untrained model
2023-06-16 13:13:44,293:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 13:13:44,293:INFO:Starting cross validation
2023-06-16 13:13:44,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:44,949:INFO:Calculating mean and std
2023-06-16 13:13:44,950:INFO:Creating metrics dataframe
2023-06-16 13:13:44,983:INFO:Uploading results into container
2023-06-16 13:13:44,984:INFO:Uploading model into container now
2023-06-16 13:13:44,984:INFO:_master_model_container: 16
2023-06-16 13:13:44,984:INFO:_display_container: 2
2023-06-16 13:13:44,984:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:13:44,984:INFO:create_model() successfully completed......................................
2023-06-16 13:13:45,048:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:45,048:INFO:Creating metrics dataframe
2023-06-16 13:13:45,053:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 13:13:45,053:INFO:Total runtime is 0.24192531903584796 minutes
2023-06-16 13:13:45,053:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:45,054:INFO:Initializing create_model()
2023-06-16 13:13:45,054:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:45,054:INFO:Checking exceptions
2023-06-16 13:13:45,054:INFO:Importing libraries
2023-06-16 13:13:45,054:INFO:Copying training dataset
2023-06-16 13:13:45,056:INFO:Defining folds
2023-06-16 13:13:45,057:INFO:Declaring metric variables
2023-06-16 13:13:45,057:INFO:Importing untrained model
2023-06-16 13:13:45,057:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 13:13:45,058:INFO:Starting cross validation
2023-06-16 13:13:45,060:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:45,606:INFO:Calculating mean and std
2023-06-16 13:13:45,606:INFO:Creating metrics dataframe
2023-06-16 13:13:45,635:INFO:Uploading results into container
2023-06-16 13:13:45,636:INFO:Uploading model into container now
2023-06-16 13:13:45,636:INFO:_master_model_container: 17
2023-06-16 13:13:45,636:INFO:_display_container: 2
2023-06-16 13:13:45,637:INFO:LGBMRegressor(random_state=123)
2023-06-16 13:13:45,637:INFO:create_model() successfully completed......................................
2023-06-16 13:13:45,696:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:45,696:INFO:Creating metrics dataframe
2023-06-16 13:13:45,701:INFO:Initializing Dummy Regressor
2023-06-16 13:13:45,701:INFO:Total runtime is 0.25273334185282387 minutes
2023-06-16 13:13:45,701:INFO:SubProcess create_model() called ==================================
2023-06-16 13:13:45,701:INFO:Initializing create_model()
2023-06-16 13:13:45,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013D6F8ABC08>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:45,701:INFO:Checking exceptions
2023-06-16 13:13:45,701:INFO:Importing libraries
2023-06-16 13:13:45,701:INFO:Copying training dataset
2023-06-16 13:13:45,706:INFO:Defining folds
2023-06-16 13:13:45,707:INFO:Declaring metric variables
2023-06-16 13:13:45,707:INFO:Importing untrained model
2023-06-16 13:13:45,707:INFO:Dummy Regressor Imported successfully
2023-06-16 13:13:45,708:INFO:Starting cross validation
2023-06-16 13:13:45,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 13:13:46,126:INFO:Calculating mean and std
2023-06-16 13:13:46,127:INFO:Creating metrics dataframe
2023-06-16 13:13:46,159:INFO:Uploading results into container
2023-06-16 13:13:46,160:INFO:Uploading model into container now
2023-06-16 13:13:46,160:INFO:_master_model_container: 18
2023-06-16 13:13:46,160:INFO:_display_container: 2
2023-06-16 13:13:46,160:INFO:DummyRegressor()
2023-06-16 13:13:46,160:INFO:create_model() successfully completed......................................
2023-06-16 13:13:46,220:INFO:SubProcess create_model() end ==================================
2023-06-16 13:13:46,220:INFO:Creating metrics dataframe
2023-06-16 13:13:46,227:INFO:Initializing create_model()
2023-06-16 13:13:46,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 13:13:46,227:INFO:Checking exceptions
2023-06-16 13:13:46,228:INFO:Importing libraries
2023-06-16 13:13:46,228:INFO:Copying training dataset
2023-06-16 13:13:46,231:INFO:Defining folds
2023-06-16 13:13:46,231:INFO:Declaring metric variables
2023-06-16 13:13:46,231:INFO:Importing untrained model
2023-06-16 13:13:46,231:INFO:Declaring custom model
2023-06-16 13:13:46,232:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 13:13:46,233:INFO:Cross validation set to False
2023-06-16 13:13:46,233:INFO:Fitting Model
2023-06-16 13:13:46,398:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:13:46,398:INFO:create_model() successfully completed......................................
2023-06-16 13:13:46,486:INFO:_master_model_container: 18
2023-06-16 13:13:46,486:INFO:_display_container: 2
2023-06-16 13:13:46,486:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 13:13:46,486:INFO:compare_models() successfully completed......................................
2023-06-16 13:13:46,487:INFO:Initializing plot_model()
2023-06-16 13:13:46,487:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013D4E0132C8>, system=True)
2023-06-16 13:13:46,487:INFO:Checking exceptions
2023-06-16 13:13:46,489:INFO:Preloading libraries
2023-06-16 13:13:46,497:INFO:Copying training dataset
2023-06-16 13:13:46,497:INFO:Plot type: feature
2023-06-16 13:13:46,497:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 13:13:58,245:INFO:Visual Rendered Successfully
2023-06-16 13:13:58,336:INFO:plot_model() successfully completed......................................
2023-06-16 13:13:58,388:INFO:Initializing save_model()
2023-06-16 13:13:58,388:INFO:save_model(model=GradientBoostingRegressor(random_state=123), model_name=model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-16 13:13:58,388:INFO:Adding model into prep_pipe
2023-06-16 13:13:58,402:INFO:model.pkl saved in current working directory
2023-06-16 13:13:58,462:INFO:Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))])
2023-06-16 13:13:58,463:INFO:save_model() successfully completed......................................
2023-06-16 13:13:58,558:INFO:Initializing load_model()
2023-06-16 13:13:58,558:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:14:17,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:17,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:17,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:17,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:18,801:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:14:19,183:INFO:Initializing load_model()
2023-06-16 13:14:19,183:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:14:24,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:24,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:24,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:24,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:14:25,621:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:14:26,018:INFO:Initializing load_model()
2023-06-16 13:14:26,018:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:15:04,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:04,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:04,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:04,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:05,744:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:15:06,169:INFO:Initializing load_model()
2023-06-16 13:15:06,169:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:15:47,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:47,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:47,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:47,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:15:48,698:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:15:49,182:INFO:Initializing load_model()
2023-06-16 13:15:49,182:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:16:09,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:09,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:09,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:09,017:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:10,024:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:16:10,406:INFO:Initializing load_model()
2023-06-16 13:16:10,406:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:16:43,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:43,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:43,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:43,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:16:44,574:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:16:44,927:INFO:Initializing load_model()
2023-06-16 13:16:44,927:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:19:19,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:19:19,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:19:19,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:19:19,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:19:20,337:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:19:20,768:INFO:Initializing load_model()
2023-06-16 13:19:20,768:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:20:20,036:INFO:Initializing predict_model()
2023-06-16 13:20:20,036:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AA2A285748>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AA2A27A048>)
2023-06-16 13:20:20,036:INFO:Checking exceptions
2023-06-16 13:20:20,036:INFO:Preloading libraries
2023-06-16 13:20:20,036:INFO:Set up data.
2023-06-16 13:20:20,040:INFO:Set up index.
2023-06-16 13:21:16,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:21:16,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:21:16,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:21:16,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:21:17,589:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:21:17,959:INFO:Initializing load_model()
2023-06-16 13:21:17,960:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:21:18,061:INFO:Initializing predict_model()
2023-06-16 13:21:18,061:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DCEF086988>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DCEF07ADC8>)
2023-06-16 13:21:18,061:INFO:Checking exceptions
2023-06-16 13:21:18,062:INFO:Preloading libraries
2023-06-16 13:21:18,062:INFO:Set up data.
2023-06-16 13:21:18,068:INFO:Set up index.
2023-06-16 13:21:24,038:INFO:Initializing predict_model()
2023-06-16 13:21:24,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DCEF204948>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DCEF1DBDC8>)
2023-06-16 13:21:24,039:INFO:Checking exceptions
2023-06-16 13:21:24,039:INFO:Preloading libraries
2023-06-16 13:21:24,039:INFO:Set up data.
2023-06-16 13:21:24,043:INFO:Set up index.
2023-06-16 13:22:14,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:22:14,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:22:14,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:22:14,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:22:15,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:22:15,851:INFO:Initializing load_model()
2023-06-16 13:22:15,851:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:22:15,971:INFO:Initializing predict_model()
2023-06-16 13:22:15,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DCEEC50EC8>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DCEEC2AD38>)
2023-06-16 13:22:15,972:INFO:Checking exceptions
2023-06-16 13:22:15,972:INFO:Preloading libraries
2023-06-16 13:22:15,973:INFO:Set up data.
2023-06-16 13:22:15,979:INFO:Set up index.
2023-06-16 13:22:34,553:INFO:Initializing predict_model()
2023-06-16 13:22:34,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DCEEDB3748>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DCEED8BE58>)
2023-06-16 13:22:34,553:INFO:Checking exceptions
2023-06-16 13:22:34,553:INFO:Preloading libraries
2023-06-16 13:22:34,554:INFO:Set up data.
2023-06-16 13:22:34,560:INFO:Set up index.
2023-06-16 13:23:27,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:27,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:27,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:27,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:28,208:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:23:28,607:INFO:Initializing load_model()
2023-06-16 13:23:28,607:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:23:33,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:33,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:33,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:33,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:23:34,677:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:23:34,985:INFO:Initializing load_model()
2023-06-16 13:23:34,985:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:23:55,932:INFO:Initializing predict_model()
2023-06-16 13:23:55,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022422DF3C08>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022422DBDC18>)
2023-06-16 13:23:55,932:INFO:Checking exceptions
2023-06-16 13:23:55,932:INFO:Preloading libraries
2023-06-16 13:23:55,933:INFO:Set up data.
2023-06-16 13:23:55,937:INFO:Set up index.
2023-06-16 13:26:15,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:15,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:15,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:15,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:16,682:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:26:17,028:INFO:Initializing load_model()
2023-06-16 13:26:17,028:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:26:20,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:20,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:20,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:20,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:26:21,108:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:26:21,354:INFO:Initializing load_model()
2023-06-16 13:26:21,354:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:27:05,936:INFO:Initializing predict_model()
2023-06-16 13:27:05,936:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ED61277888>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED6123DCA8>)
2023-06-16 13:27:05,936:INFO:Checking exceptions
2023-06-16 13:27:05,936:INFO:Preloading libraries
2023-06-16 13:27:05,936:INFO:Set up data.
2023-06-16 13:27:05,939:INFO:Set up index.
2023-06-16 13:34:05,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:34:05,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:34:05,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:34:05,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 13:34:07,362:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 13:34:07,862:INFO:Initializing load_model()
2023-06-16 13:34:07,862:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2023-06-16 13:34:08,018:INFO:Initializing predict_model()
2023-06-16 13:34:08,018:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B87F08>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B5DEE8>)
2023-06-16 13:34:08,018:INFO:Checking exceptions
2023-06-16 13:34:08,019:INFO:Preloading libraries
2023-06-16 13:34:08,019:INFO:Set up data.
2023-06-16 13:34:08,026:INFO:Set up index.
2023-06-16 13:34:08,313:INFO:Initializing predict_model()
2023-06-16 13:34:08,313:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351AE7D88>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B5DF78>)
2023-06-16 13:34:08,313:INFO:Checking exceptions
2023-06-16 13:34:08,313:INFO:Preloading libraries
2023-06-16 13:34:08,314:INFO:Set up data.
2023-06-16 13:34:08,318:INFO:Set up index.
2023-06-16 13:35:19,859:INFO:Initializing predict_model()
2023-06-16 13:35:19,859:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B90C48>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B5DC18>)
2023-06-16 13:35:19,860:INFO:Checking exceptions
2023-06-16 13:35:19,860:INFO:Preloading libraries
2023-06-16 13:35:19,860:INFO:Set up data.
2023-06-16 13:35:19,864:INFO:Set up index.
2023-06-16 13:35:38,188:INFO:Initializing predict_model()
2023-06-16 13:35:38,189:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002633ECDABC8>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B5DD38>)
2023-06-16 13:35:38,189:INFO:Checking exceptions
2023-06-16 13:35:38,189:INFO:Preloading libraries
2023-06-16 13:35:38,189:INFO:Set up data.
2023-06-16 13:35:38,194:INFO:Set up index.
2023-06-16 13:35:52,524:INFO:Initializing predict_model()
2023-06-16 13:35:52,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B2ED48>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B5DC18>)
2023-06-16 13:35:52,524:INFO:Checking exceptions
2023-06-16 13:35:52,525:INFO:Preloading libraries
2023-06-16 13:35:52,525:INFO:Set up data.
2023-06-16 13:35:52,530:INFO:Set up index.
2023-06-16 13:36:38,125:INFO:Initializing predict_model()
2023-06-16 13:36:38,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B36EC8>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351BADF78>)
2023-06-16 13:36:38,125:INFO:Checking exceptions
2023-06-16 13:36:38,125:INFO:Preloading libraries
2023-06-16 13:36:38,126:INFO:Set up data.
2023-06-16 13:36:38,130:INFO:Set up index.
2023-06-16 13:37:16,539:INFO:Initializing predict_model()
2023-06-16 13:37:16,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B04548>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351BAD3A8>)
2023-06-16 13:37:16,539:INFO:Checking exceptions
2023-06-16 13:37:16,539:INFO:Preloading libraries
2023-06-16 13:37:16,539:INFO:Set up data.
2023-06-16 13:37:16,544:INFO:Set up index.
2023-06-16 13:37:27,484:INFO:Initializing predict_model()
2023-06-16 13:37:27,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B04A48>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351BAD3A8>)
2023-06-16 13:37:27,484:INFO:Checking exceptions
2023-06-16 13:37:27,484:INFO:Preloading libraries
2023-06-16 13:37:27,484:INFO:Set up data.
2023-06-16 13:37:27,489:INFO:Set up index.
2023-06-16 13:38:18,378:INFO:Initializing predict_model()
2023-06-16 13:38:18,378:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026351B51CC8>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B8B678>)
2023-06-16 13:38:18,378:INFO:Checking exceptions
2023-06-16 13:38:18,378:INFO:Preloading libraries
2023-06-16 13:38:18,378:INFO:Set up data.
2023-06-16 13:38:18,383:INFO:Set up index.
2023-06-16 13:39:04,835:INFO:Initializing predict_model()
2023-06-16 13:39:04,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002634AE4A208>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B8B678>)
2023-06-16 13:39:04,837:INFO:Checking exceptions
2023-06-16 13:39:04,837:INFO:Preloading libraries
2023-06-16 13:39:04,837:INFO:Set up data.
2023-06-16 13:39:04,841:INFO:Set up index.
2023-06-16 13:39:35,020:INFO:Initializing predict_model()
2023-06-16 13:39:35,022:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002634FE17A88>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Amani\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=0, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026351B8BD38>)
2023-06-16 13:39:35,022:INFO:Checking exceptions
2023-06-16 13:39:35,022:INFO:Preloading libraries
2023-06-16 13:39:35,022:INFO:Set up data.
2023-06-16 13:39:35,026:INFO:Set up index.
